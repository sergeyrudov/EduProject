buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'io.qameta.allure', name: 'allure-gradle', version: '2.8.1'
    }
}

plugins {
    id 'java-library'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.4.30-RC'
    id "io.qameta.allure" version "2.8.1"
}

group 'cloud.autotests'
version '1.0'

sourceCompatibility = 1.11
targetCompatibility = 1.11

ext {
    junitVersion = "5.6.2"
    allureVersion = '2.13.2'
}

repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()

}

allure {
    version = "${allureVersion}"
    autoconfigure = true

    useJUnit5 {
        version = "${allureVersion}"
    }
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation "io.rest-assured:rest-assured:4.1.2"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.0'
    compile 'org.jdom:jdom2:2.0.6'
    compile group: 'io.appium', name: 'java-client', version: '7.4.1'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '3.141.59'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '3.141.59'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '3.141.59'
    implementation group: 'com.google.guava', name: 'guava', version: '10.0.1'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    //compile 'org.slf4j:slf4j-api:1.7.5'
    //compile 'org.slf4j:slf4j-simple:1.7.5'



    compile 'com.codeborne:selenide:5.11.0'
    compile "io.qameta.allure:allure-selenide:${allureVersion}"
    compile "io.qameta.allure:allure-rest-assured:${allureVersion}"
    compile 'io.rest-assured:rest-assured:4.1.2'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.10.3'

    compile("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    compile("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")



}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task api(type: Test) {
    useJUnitPlatform {
        includeTags 'api'
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties = System.properties
    if (project.hasProperty("web_threads")) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': project.getProperty("web_threads").toInteger()
        ]
    }
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task tests(type: Test) {
    useJUnitPlatform {
        includeTags 'ui'
        includeTags 'api'
    }
    systemProperty 'platform', 'web'
}
